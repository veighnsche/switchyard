name: Provenance (Artifact-First)

on:
  push:
    branches: [ main ]
    paths:
      - 'cargo/switchyard/**'
      - 'ci/front_page.pml'
      - 'test_ci_runner.py'
      - 'cargo/switchyard/.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'cargo/switchyard/**'
      - 'ci/front_page.pml'
      - 'test_ci_runner.py'
      - 'cargo/switchyard/.github/workflows/**'

jobs:
  provenance:
    name: Generate + Verify + Upload
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install PyNaCl (for Ed25519)
        run: |
          python -m pip install --upgrade pip
          pip install pynacl
      - name: Generate artifacts (tests, coverage, manifest)
        env:
          PROVENANCE_ED25519_PRIVATE_KEY_B64: ${{ secrets.PROVENANCE_ED25519_PRIVATE_KEY_B64 }}
        run: |
          python3 scripts/provenance_ci.py
      - name: Verify digests
        run: |
          python3 scripts/verify_provenance_digests.py
      - name: Verify signature (if public key provided)
        env:
          PROVENANCE_ED25519_PUBLIC_KEY_B64: ${{ secrets.PROVENANCE_ED25519_PUBLIC_KEY_B64 }}
        run: |
          python3 scripts/verify_provenance_signature.py
      - name: Upload Provenance artifacts (ci/)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: provenance-ci-${{ github.sha }}
          path: |
            ci/
          if-no-files-found: error
      - name: Upload Provenance manifest (.provenance/)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: provenance-index-${{ github.sha }}
          path: |
            .provenance/manifest.json*
          if-no-files-found: error

  publish:
    name: Publish (provenance branch, commit-pinned)
    runs-on: ubuntu-latest
    needs: provenance
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download provenance ci artifact
        uses: actions/download-artifact@v4
        with:
          name: provenance-ci-${{ github.sha }}
          path: _pub/ci
      - name: Download provenance index artifact
        uses: actions/download-artifact@v4
        with:
          name: provenance-index-${{ github.sha }}
          path: _pub/index
      - name: Stage commit-pinned payload
        run: |
          set -euo pipefail
          mkdir -p _site
          DEST=_site/provenance/${GITHUB_SHA}
          mkdir -p "$DEST/.provenance"
          cp -a _pub/ci/. "$DEST/"
          cp -a _pub/index/. "$DEST/.provenance/"
          test -f ci/front_page.pml
          echo "<html><body>Commit-pinned artifacts published under provenance/${GITHUB_SHA}/</body></html>" > "$DEST/index.html"
      - name: Publish to branch 'provenance'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          keep_files: true
          destination_dir: .
          publish_branch: provenance
